// Protobuf for on-chain data.
syntax = "proto3";

package proto.chain;

import "google/protobuf/any.proto";

// ref: https://github.com/paritytech/parity-bitcoin/blob/master/chain/README.md

// A blockchain is a chain of blocks.
//
// A block is a data structure with two fields:
// - Block header: a data structure containing the block's metadata
// - Transactions: an array (vector in rust) of transactions
message Block {
  repeated Transaction transactions = 1;
  BlockHeader block_header = 2;
}

message BlockHeader {
  // renamed: raw
  message Raw {
    reserved 4, 5, 8;
    reserved "nonce", "difficulty";

    int64 timestamp = 1;
    // renamed: txTrieRoot
    // the root hash of merkle tree
    bytes merkle_root_hash = 2;
    // renamed: parentHash
    bytes parent_hash = 3;
    // bytes nonce = 5;
    // bytes difficulty = 6;
    int64 number = 7;
    // seemed unused
    // int64 witness_id = 8;
    bytes witness_address = 9;
    int32 version = 10;
    // renamed: accountStateRoot, First appares in block=8222293, actually not used.
    bytes account_state_root = 11;
  }

  Raw raw_data = 1;
  bytes witness_signature = 2;
}

enum ContractType {
  reserved 21, 22, 23;
  reserved "BuyStorageContract", "BuyStorageBytesContract", "SellStorageContract";
  // NOTE: unused or deprecated
  // BuyStorageContract = 21;
  // BuyStorageBytesContract = 22;
  // SellStorageContract = 23;
  AccountCreateContract = 0;
  TransferContract = 1;
  TransferAssetContract = 2;
  // NOTE: only used in active permission bits.
  OBSOLETE_VoteAssetContract = 3;
  VoteWitnessContract = 4;
  WitnessCreateContract = 5;
  AssetIssueContract = 6;
  WitnessUpdateContract = 8;
  ParticipateAssetIssueContract = 9;
  AccountUpdateContract = 10;
  FreezeBalanceContract = 11;
  UnfreezeBalanceContract = 12;
  WithdrawBalanceContract = 13;
  UnfreezeAssetContract = 14;
  UpdateAssetContract = 15;
  ProposalCreateContract = 16;
  ProposalApproveContract = 17;
  ProposalDeleteContract = 18;
  SetAccountIdContract = 19;
  // NOTE: only used in active permission bits.
  OBSOLETE_CustomContract = 20;
  CreateSmartContract = 30;
  TriggerSmartContract = 31;
  // NOTE: only used in active permission bits.
  OBSOLETE_GetContract = 32;
  UpdateSettingContract = 33;
  ExchangeCreateContract = 41;
  ExchangeInjectContract = 42;
  ExchangeWithdrawContract = 43;
  ExchangeTransactionContract = 44;
  UpdateEnergyLimitContract = 45;
  AccountPermissionUpdateContract = 46;
  ClearABIContract = 48;
  UpdateBrokerageContract = 49;
  // NOTE: Only used in active permission bits, and nile testnet.
  ShieldedTransferContract = 51;
  // NOTE: Introduced in 4.1
  MarketSellAssetContract = 52;
  MarketCancelOrderContract = 53;
}

message Transaction {
  message Contract {
    ContractType type = 1;
    google.protobuf.Any parameter = 2;
    // NOE: Not used.
    bytes provider = 3;
    // renamed: ContractName
    bytes contract_name = 4;
    // renamed: Permission_id
    int32 permission_id = 5;
  }

  message Result {
    reserved "constant_result";
    // renamed: code
    enum Status {
      SUCESS = 0;
      FAILED = 1;
    }
    // renamed: contractResult
    enum ContractStatus {
      DEFAULT = 0;
      SUCCESS = 1;
      // Used by CreatSmartContract and TriggerSmartContract
      REVERT = 2;
      ILLEGAL_OPERATION = 8;
      OUT_OF_TIME = 11;
      OUT_OF_ENERGY = 10;
      // TransferException
      TRANSFER_FAILED = 14;
      // Un-caught exception
      UNKNOWN = 13;
      // Maybe not used
      BAD_JUMP_DESTINATION = 3;
      OUT_OF_MEMORY = 4;
      PRECOMPILED_CONTRACT = 5;
      STACK_TOO_SMALL = 6;
      STACK_TOO_LARGE = 7;
      STACK_OVERFLOW = 9;
      JVM_STACK_OVER_FLOW = 12;
    }

    // renamed: ret
    // NOTE: Actually meaningless in a block storage. Always = 0
    Status status = 2;
    // renamed: contractRet
    ContractStatus contract_status = 3;

    // NOTE: All following fields are not used. Some can be found in TransactionInfo.
    int64 fee = 1;
    // renamed: assetIssueID
    string asset_issue_id = 14;
    int64 withdraw_amount = 15;
    int64 unfreeze_amount = 16;
    int64 exchange_received_amount = 18;
    int64 exchange_inject_another_amount = 19;
    int64 exchange_withdraw_another_amount = 20;
    int64 exchange_id = 21;
    int64 shielded_transaction_fee = 22;

    // NOTE: 2018/08/02 block=1102553
    // Then it was wrongly deleted, and wrongly used
    // e.g. txn: 97d6802de90da0d7e680c184c5780c4396b45ae8df83e69e05c5ae7d3fca3987
    // there might be empty bytes, which will be omitted by protobuf encoder
    // `oneof` forces encoding of default empty value.
    oneof OBSOLETE_resource_receipt_wrapper {
      bytes OBSOLETE_resource_receipt = 4;
    }
  }

  message Raw {
    bytes ref_block_bytes = 1;
    bytes ref_block_hash = 4;
    // max = now + 86400_000
    int64 expiration = 8;
    // used as transaction memo
    // max size = 512000
    bytes data = 10;
    // only support size = 1, repeated list here for extension
    // changed: from repeated to optional(default for proto3)
    Contract contract = 11;
    // unused, but is filled with creation time.
    int64 timestamp = 14;
    // max energy fee limit
    int64 fee_limit = 18;

    // unused
    int64 ref_block_num = 3;
    // unused, changed from Authority type
    repeated bytes auths = 9;
    // unused
    bytes scripts = 12;

    // in commit ae0075bd6d433f6bfb2ecbb74e5f380ee819dbc8
    // in txn a5262325574c1cd4f0b7e0ea3d099d8546f47c72f8c165b792971f52d67d436c
    // there might be an encoded default`0`:
    // 2b95b265f75fd0f91c3cd39b428d104bd80c5344f3bb4d5c06eede2ff542f8a9
    oneof OBSOLETE_max_cpu_usage_wrapper {
      int64 OBSOLETE_max_cpu_usage = 15;
    }
  }

  Raw raw_data = 1;
  // normally size = 1, repeated list here for multi-sig extension
  repeated bytes signatures = 2;
  // renamed: ret
  // NOTE: Many malformed transactions with len(result) = 2.
  // NOTE: Cannot make it a non-repeated, since only last will be returned, while the first is the actual result.
  repeated Result result = 5;
  // NOTE: guess from wrong format
  // in txn 17e597a68ea38205ca3d6724fc9733563d60879fc2118a52303f515fa1f36fec
  // also, might be a default
  // c455d5dd001ffff9216b2673095a6d9f4ff0aaadb921a7399608e7654cc3e5d9
  oneof OBSOLETE_raw_wrapper {
    bytes OBSOLETE_raw = 6;
  }
  // might be right or wrong
  // like in 901af9115d4944a87d2923be2d67ae5e3fc0df4dcb8867bb952612a551695116
  oneof OBSOLETE_txid_WRAPPER {
    bytes OBSOLETE_txid = 7;
  }
}
