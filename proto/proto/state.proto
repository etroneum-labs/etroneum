// Protobuf for state-db.
syntax = "proto3";

package proto.state;

import "common.proto";
import "chain.proto";

message AccountResource {
  int64 free_bandwidth_used = 1;
  // Normally free bandwidth limit is a const defined in code, 5000.
  // int64 free_bandwidth_limit = 2;
  int64 free_bandwidth_latest_slot = 3;
  int64 frozen_bandwidth_used = 4;
  int64 frozen_bandwidth_limit = 5;
  // saved as slot
  int64 frozen_bandwidth_latest_slot = 6;
  int64 energy_used = 7;
  // int64 energy_limit = 8;
  int64 energy_latest_slot = 9;
  map<int64, int64> asset_bandwidth_used = 10;
  // limit is saved in Asset
  // map<int64, int64> asset_bandwidth_limit = 11;
  map<int64, int64> asset_bandwidth_latest_slot = 12;
}

message PermissionKey {
  bytes address = 1;
  int64 weight = 2;
}

// permission_id = 0
message OwnerPermission {
  int64 threshold = 1;
  repeated PermissionKey keys = 2;
}

// permission_id = 2, 3, 4, ...
message ActivePermission {
  int64 threshold = 1;
  repeated PermissionKey keys = 2;
  bytes operations = 3;
  string permission_name = 5;
}

message Account {
  proto.common.AccountType type = 1;
  string name = 2;
  int64 creation_time = 3;
  int64 balance = 4;
  map<int64, int64> token_balance = 5;
  AccountResource resource = 6;
  int64 latest_operation_timestamp = 7;
  // frozen resource
  int64 frozen_amount_for_bandwidth = 8;
  int64 frozen_amount_for_energy = 9;
  // delegated in bandwidth
  int64 delegated_frozen_amount_for_bandwidth = 10;
  // delegated in energy
  int64 delegated_frozen_amount_for_energy = 11;
  int64 delegated_out_amount = 12;
  int64 issued_asset_id = 13;
  int64 latest_withdraw_timestamp = 14;
  int64 allowance = 15;
  OwnerPermission owner_permission = 16;
  repeated ActivePermission active_permissions = 17;
  // deprecated, but still exists
  bytes account_id = 20;
}

message Witness {
  bytes address = 1;
  string url = 2;
  // renamed: is_jobs
  bool is_active = 3;
  int64 vote_count = 4;
  int64 total_produced = 5;
  int64 total_missed = 6;
  int64 latest_block_number = 7;
  int64 latest_slot_number = 8;
  int32 latest_block_version = 9;
  // range: 0-100
  int32 brokerage = 10;
  // Witness permission, permission_id = 1
  bytes signature_key = 11;
}

// Witness reward info of one epoch.
message WitnessVoterReward {
  int64 vote_count = 1;
  int64 reward_amount = 3;
}

message ResourceDelegation {
  bytes to_address = 1;
  bytes from_address = 2;
  int64 amount_for_bandwidth = 3;
  int64 expiration_timestamp_for_bandwidth = 4;
  int64 amount_for_energy = 5;
  int64 expiration_timestamp_for_energy = 6;
}

message Votes {
  repeated proto.common.Vote votes = 1;
  // used for calculating vote reward
  int64 epoch = 2;
}

message Proposal {
  int64 proposal_id = 1;
  bytes proposer_address = 2;
  map<int64, int64> parameters = 3;
  int64 expiration_time = 4;
  int64 creation_time = 5;
  repeated bytes approver_addresses = 6;
  enum State {
    PENDING = 0;
    DISAPPROVED = 1;
    APPROVED = 2;
    CANCELLED = 3;
  }
  State state = 7;
}

// Internal transaction of smart contract call.
message InternalTransaction {
  // internalTransaction identity, the root InternalTransaction hash
  // should equals to root transaction id.
  bytes hash = 1;
  // the one send trx, or token or call via function
  bytes caller_address = 2;
  // the one recieve trx, or token or call via function
  bytes to_address = 3;
  // call value
  int64 call_value = 4;
  // token id
  int64 call_token_id = 5;
  // token value
  int64 call_token_value = 6;
  // call data
  bytes data = 8;
  // caller function name: call, suicide
  bytes note = 7;
  bool accepted = 9;
}

// renamed: AssetIssue
message Asset {
  // NOTE: This is different from contract.Asset.FrozenSupply.
  message FrozenSupply {
    int64 frozen_amount = 1;
    int64 frozen_expiry_timestamp = 2;
    bool is_unfrozen = 3;
  }

  bytes owner_address = 1;
  // changed: bytes
  string name = 2;
  // changed: bytes
  string abbr = 3;
  int64 total_supply = 4;
  repeated FrozenSupply frozen_supply = 5;
  int32 trx_num = 6;
  int32 precision = 7;
  int32 num = 8;
  int64 start_time = 9;
  int64 end_time = 10;
  // NOTE: might be illegal utf8 bytes
  bytes description = 20;
  // changed: bytes
  string url = 21;
  int64 free_asset_bandwidth_limit = 22;
  int64 public_free_asset_bandwidth_limit = 23;
  int64 public_free_asset_bandwidth_used = 24;
  int64 public_free_asset_bandwidth_last_slot = 25;
  // changed: string
  int64 id = 41;
}

message Exchange {
  int64 id = 1;
  bytes owner_address = 2;
  int64 creation_time = 3;
  int64 first_token_id = 6;
  int64 first_token_balance = 7;
  int64 second_token_id = 8;
  int64 second_token_balance = 9;
}

message TransactionLog {
  // contract address
  bytes address = 1;
  // <<hash of topic signature, [indexed parameter]>>
  repeated bytes topics = 2;
  // <<[non-indexed parameter]>>
  bytes data = 3;
}

message ResourceReceipt {
  int64 energy_usage = 1;
  int64 energy_fee = 2;
  int64 origin_energy_usage = 3;
  int64 energy = 4;

  int64 bandwidth_usage = 5;
  // when create a new account, usage = 0, fee = 0.1 TRX
  int64 bandwidth_fee = 6;

  // Oneof: asset issue, exchange create, witness create, account permission update.
  int64 contract_fee = 7;

  int64 multisig_fee = 8;
}

// renamed: TransactionInfo
message TransactionReceipt {
  bytes hash = 1;
  bool success = 2;
  int64 block_number = 3;
  int64 block_timestamp = 4;

  int64 fee = 5;
  ResourceReceipt resource_receipt = 6;

  int64 asset_created_token_id = 7;
  int64 withdrawal_amount = 8;
  int64 unfrozen_amount = 9;

  chain.Transaction.Result.ContractStatus vm_status = 10;
  // VM error message
  bytes vm_message = 11;
  bytes vm_created_contract_address = 12;
  bytes vm_result = 13;
  repeated InternalTransaction vm_internal_transactions = 14;
  repeated TransactionLog vm_logs = 15;

  int64 exchange_created_exchange_id = 16;
  int64 exchange_received_amount = 17;
  int64 exchange_injected_amount = 18;
  int64 exchange_withdrawal_amount = 19;
}

// Chain parameters, known as proposals, can be changed via proposal.
enum ChainParameter {
  // # Chain core parameters.
  //
  // The maintenance interval of SRs.
  //
  // Renamed: `MaintenanceTimeInterval`
  //
  // Default: 6h, 21600000 in ms
  //
  // Range: [3 * 27 * 1000, 24 * 3600 * 1000] (27x3s ~ 1d)
  MaintenanceInterval = 0;
  // Max execution duration of a TVM transaction(smart contract creation and triggering).
  //
  // Default: 50, in ms
  //
  // Renamed: `MaxCpuTimeOfOneTx`
  //
  // Range: [10, 100]
  MaxCpuTimeOfOneTxn = 13;
  // Remove votes from geneses GRs(guard representative).
  //
  // Renamed: `RemoveThePowerOfTheGr`
  //
  // Default: 0, unremoved
  //
  // Mainnet: -1
  //
  // Note: 1 to remove, -1 denotes already removed
  RemovePowerOfGr = 10;
  // Enabled: 4.1
  AllowPbft = 40;

  // # New features and fixes of new versions.
  //
  // Allow update an accunt's name; Allow duplicate names.
  //
  // Default: 0
  //
  // Mainnet: 0
  AllowUpdateAccountName = 14;
  // Default: config, 0
  AllowSameTokenName = 15;
  // Default: config, 0
  AllowDelegateResource = 16;
  // Enabled: 3.5
  //
  // Renamed: `AllowMultiSign`
  //
  // Default: config, 0
  AllowMultisig = 20;
  // Enabled: 3.6
  //
  // Default: 0
  //
  // Mainnet: 0
  //
  // Note: Never appear as a proposal. Hidden in tronscan, but is avaliable as config options in java-tron.
  // Block #8222293 has this field.
  AllowAccountStateRoot = 25;
  // This enables TVM and allows creation of smart contracts.
  //
  // Renamed: `AllowCreationOfContracts`
  //
  // Default: config, 0
  AllowTvm = 9;
  // Enabled: 3.6.6
  //
  // Requires: `AllowTvm`
  //
  // Default: 0
  //
  // Mainnet: 0 (not passed due to bad design)
  ForbidTransferToContract = 35;
  // Add `UpdateBrokerageContract`, something to do with witness reward. Decentralized vote dividend.
  // TODO: bad naming
  //
  // Renamed: `ChangeDelegation`
  //
  // Enabled: 3.6.5
  AllowChangeDelegation = 30;
  // Add market transaction support.
  //
  // Enabled: 4.1
  AllowMarketTransaction = 44;
  // Allow transaction fee pool.
  //
  // Enabled: 4.1.2
  //
  // Default: 0
  AllowTransactionFeePool = 48;
  // Use BURN_TRX_AMOUNT instead of Blackhole.
  //
  // Enabled: 4.1.2
  //
  // Default: 0
  AllowBlackholeOptimization = 49;

  // # Fees
  //
  // Fees, in SUN.
  // Renamed: `TransactionFee`
  //
  // Default: 10
  BandwidthPrice = 3;
  // Default: 100
  EnergyPrice = 11;
  // Used in `CreateAccount`, `Transfer`, `TransferAsset`.
  //
  // Default: 0
  CreateNewAccountFeeInSystemContract = 7;
  // Default: 1
  CreateNewAccountBandwidthRate = 8;
  // The cost of applying to be an SR account.
  //
  // Renamed: `AccountUpgradeCost`
  //
  // Default: 9999_000_000
  WitnessCreateFee = 1;
  // Account creation fee.
  //
  // Used in `CreateAccount`, `Transfer`, `TransferAsset`.
  //
  // Renamed: `CreateAccountFee`
  //
  // Default: 100_000
  AccountCreateFee = 2;
  // Default: 1024_000_000
  AssetIssueFee = 4;
  // Default: 1024_000_000
  ExchangeCreateFee = 12;
  // Renamed: `UpdateAccountPermissionFee`
  //
  // Enabled: 3.5
  //
  // Range: [0, 100_000_000000]
  //
  // Default: 100_000_000
  AccountPermissionUpdateFee = 22;
  // Renamed: `MultiSignFee`
  //
  // Enabled: 3.5
  //
  // Default: 1_000_000
  //
  // Range: [0, 100_000_000000]
  MultisigFee = 23;
  // Market fees.
  MarketSellFee = 45;
  MarketCancelFee = 46;
  // Max fee limit.
  //
  // Enabled: 4.1.2
  //
  // Default: 1000_000_000
  //
  // Range: 0, 10_000_000_000
  MaxFeeLimit = 47;

  // # Energy / bandwidth model
  //
  // Adaptive energy.
  // Enabled by EnergyLimit update, Deprecated by 3.2.2.
  //
  // Default: 50_000_000_000
  //
  // Note: uselesss now, but
  TotalEnergyLimit = 17;
  // Enabled: 3.2.2
  //
  // Default: 50_000_000_000
  //
  // Mainnet: 90_000_000_000 (via proposal)
  TotalEnergyCurrentLimit = 19;
  // Default: config, 0
  //
  // Mainnet: 0
  AllowAdaptiveEnergy = 21;
  // derived from above
  // TotalEnergyTargetLimit = 6250000
  // TotalEnergyAverageUsage = 0
  // Enabled: 3.6.5
  //
  // Default: 14400 (24 * 60 * 10)
  //
  // Mainnet: 10
  AdaptiveResourceLimitTargetRatio = 33;
  // Enabled: 3.6.5
  //
  // Default: 1000
  AdaptiveResourceLimitMultiplier = 29;

  // # Witness and rewarding
  //
  // Witness rewards. Standby witness = 27 active witnesses + 100 partner witnesses.
  // SR block generation reward.
  //
  // Default: 32_000_000
  //
  // Mainnet: 16_000_000
  WitnessPayPerBlock = 5;
  // In maintenance cycle, after new witness list is updated, All standby witnesses will be rewarded.
  // Actual pay amount is divided by the total vote weight. Only when `AllowChangeDelegation` = false.
  //
  // Renamed: `WitnessStandbyAllowance`
  //
  // Requires: !`AllowChangeDelegation`
  //
  // Default: 115_200_000_000 = 16_000_000 * (21600_000 / 3_000)
  StandbyWitnessAllowance = 6;
  // Each block, amount of TRX reward is paid to standby witness, actual pay amount is according to the vote weight.
  //
  // Renamed: `Witness127PayPerBlock`
  //
  // Requires: `AllowChangeDelegation`
  //
  // Enabled: 3.6.5
  //
  // Default: 16_000_000
  //
  // Mainnet: 160_000_000
  StandbyWitnessPayPerBlock = 31;

  // # TVM updates
  //
  // TVM v3.2 update. CALLTOKEN, TOKENBALANCE, CALLTOKENVALUE, CALLTOKENID.
  //
  // Requires: `AllowSameTokenName`
  //
  // Default: config, 0
  AllowTvmTransferTrc10Upgrade = 18;
  // TVM with shift instructions, CREATE2, EXTCODEHASH. ClearABI, forbid delegate resource to contract.
  //
  // Renamed: `AllowTvmConstantinople`
  //
  // Enabled: 3.6
  //
  // Requires: `AllowTvmTransferTrc10`
  //
  // Default: config, 0
  AllowTvmConstantinopleUpgrade = 26;
  // TVM with `batchvalidatesign`, `validatemultisign`, `iscontract` support.
  //
  // Renamed: `AllowTvmSolidity059`
  //
  // Enabled: 3.6.5
  //
  // Requires: `AllowTvm`
  //
  // Default: config, 0
  AllowTvmSolidity059Upgrade = 32;
  // TVM with librustzcash Shielded precompiles upgrade.
  //
  // Renamed: `AllowShieldedTRC20Transaction`
  //
  // Enabled: 4.0
  //
  // Default: config, 0
  AllowTvmShieldedUpgrade = 39;
  // TVM 4.1 update. CHAINID, SELFBALANCE, CREATE2 support.
  //
  // Enabled: 4.1
  AllowTvmIstanbulUpgrade = 41;

  // # Useless.
  //
  // Enabled: 3.6
  //
  // Default: 0
  AllowProtoFilterNum = 24;
  // Legacy. Only available on nile testnet.
  //
  // Enabled: 3.7
  //
  // Default: 0
  AllowShieldedTransaction = 27;
}
